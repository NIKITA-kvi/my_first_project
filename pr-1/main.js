(()=>{var e,n,r={887:(e,n,r)=>{"use strict";r.r(n),r.d(n,{default:()=>c});var t=r(354),o=r.n(t),i=r(314),a=r.n(i)()(o());a.push([e.id,'*{padding:0px;margin:0px;border:none}*,*::before,*::after{-webkit-box-sizing:border-box;box-sizing:border-box}a,a:link,a:visited{-webkit-text-decoration:none;text-decoration:none}a:hover{-webkit-text-decoration:none;text-decoration:none}aside,nav,footer,header,section,main{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,textarea,button,select{font-family:inherit;font-size:inherit;color:inherit;background-color:rgba(0,0,0,0)}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background-color:rgba(0,0,0,0);background:none;cursor:pointer}input:focus,input:active,button:focus,button:active{outline:none}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}legend{display:block}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}body{min-width:320px;min-height:100dvh;margin:0;font-family:"Jost",sans-serif;font-weight:400;line-height:1.6;background-color:#fff;color:#141024}.container{margin:0 auto;max-width:1160px;width:100%;height:100%}.container--wide{max-width:1720px;margin:0 auto}.logo{font-size:30px;font-weight:700}.tel{font-size:30px;font-weight:600}section{padding:120px 0}.btn{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:25px 54px;font-size:18px;font-weight:400;border-radius:5px;border:none;cursor:pointer;background-color:#d52027;color:#fff}',"",{version:3,sources:["webpack://./src/styles/reset.scss","webpack://./src/styles/global.scss","webpack://./src/styles/variables.scss"],names:[],mappings:"AAAA,EACE,WAAA,CACA,UAAA,CACA,WAAA,CAGF,qBAGE,6BAAA,CAAA,qBAAA,CAKF,mBAGE,4BAAA,CAAA,oBAAA,CAGF,QACE,4BAAA,CAAA,oBAAA,CAKF,qCAME,aAAA,CAGF,oBAOE,iBAAA,CACA,mBAAA,CAGF,SAEE,eAAA,CAGF,IACE,kBAAA,CAGF,QAEE,cAAA,CACA,WAAA,CAGF,QACE,iBAAA,CAKF,6BAIE,mBAAA,CACA,iBAAA,CACA,aAAA,CACA,8BAAA,CAGF,iBACE,YAAA,CAGF,0BAEE,oBAAA,CACA,uBAAA,CAAA,eAAA,CACA,8BAAA,CACA,eAAA,CACA,cAAA,CAGF,oDAIE,YAAA,CAGF,yBACE,SAAA,CACA,QAAA,CAGF,MACE,cAAA,CAGF,OACE,aAAA,CCzGF,EACE,6BAAA,CAAA,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,KACE,eAAA,CACA,iBAAA,CACA,QAAA,CACA,6BCZU,CDaV,eAAA,CACA,eAAA,CACA,qBCTgB,CDUhB,aCXc,CDchB,WACE,aAAA,CACA,gBAAA,CACA,UAAA,CACA,WAAA,CAEA,iBACE,gBAAA,CACA,aAAA,CAIJ,MACE,cAAA,CACA,eAAA,CAGF,KACE,cAAA,CACA,eAAA,CAGF,QACE,eAAA,CAGF,KACE,0BAAA,CAAA,0BAAA,CAAA,mBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,iBAAA,CACA,cAAA,CACA,eAAA,CACA,iBAAA,CACA,WAAA,CACA,cAAA,CACA,wBC/Ca,CDgDb,UClDgB",sourcesContent:["* {\n  padding: 0px;\n  margin: 0px;\n  border: none;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Links */\n\na,\na:link,\na:visited {\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: none;\n}\n\n/* Common */\n\naside,\nnav,\nfooter,\nheader,\nsection,\nmain {\n  display: block;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nul,\nul li {\n  list-style: none;\n}\n\nimg {\n  vertical-align: top;\n}\n\nimg,\nsvg {\n  max-width: 100%;\n  height: auto;\n}\n\naddress {\n  font-style: normal;\n}\n\n/* Form */\n\ninput,\ntextarea,\nbutton,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n  background-color: transparent;\n}\n\ninput::-ms-clear {\n  display: none;\n}\n\nbutton,\ninput[type='submit'] {\n  display: inline-block;\n  box-shadow: none;\n  background-color: transparent;\n  background: none;\n  cursor: pointer;\n}\n\ninput:focus,\ninput:active,\nbutton:focus,\nbutton:active {\n  outline: none;\n}\n\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\nlabel {\n  cursor: pointer;\n}\n\nlegend {\n  display: block;\n}\n","@use 'variables' as *;\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  min-width: 320px;\n  min-height: 100dvh;\n  margin: 0;\n  font-family: $font-main;\n  font-weight: 400;\n  line-height: 1.6;\n  background-color: $secondary-color;\n  color: $text-color-primary;\n}\n\n.container {\n  margin: 0 auto;\n  max-width: 1160px;\n  width: 100%;\n  height: 100%;\n\n  &--wide {\n    max-width: 1720px;\n    margin: 0 auto;\n  }\n}\n\n.logo {\n  font-size: 30px;\n  font-weight: 700;\n}\n\n.tel {\n  font-size: 30px;\n  font-weight: 600;\n}\n\nsection {\n  padding: 120px 0;\n}\n\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 25px 54px;\n  font-size: 18px;\n  font-weight: 400;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  background-color: $controls-bg-primary;\n  color: $controls-color-primary;\n}\n","$font-main: 'Jost', sans-serif;\n\n$someColor: #000000;\n\n// all colors\n$primary-color: #141024;\n$secondary-color: #ffffff;\n$tertiary-color: #dddce0;\n$accent-color: #d52027;\n\n// btns\n$controls-bg-primary: $accent-color;\n$controls-color-primary: $secondary-color;\n\n// text\n$text-color-primary: $primary-color;\n"],sourceRoot:""}]);const c=a},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);t&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},268:(e,n,r)=>{"use strict";var t=r(72),o=r.n(t),i=r(825),a=r.n(i),c=r(659),d=r.n(c),s=r(56),l=r.n(s),u=r(540),p=r.n(u),f=r(113),A=r.n(f),h=r(887),m={};m.styleTagTransform=A(),m.setAttributes=l(),m.insert=d().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p();var v=o()(h.default,m);if(!h.default.locals||e.hot.invalidate){var g=!h.default.locals,b=g?h:h.default.locals;e.hot.accept(887,(n=>{h=r(887),function(e,n,r){if(!e&&n||e&&!n)return!1;var t;for(t in e)if((!r||"default"!==t)&&e[t]!==n[t])return!1;for(t in n)if(!(r&&"default"===t||e[t]))return!1;return!0}(b,g?h:h.default.locals,g)?(b=g?h:h.default.locals,v(h.default)):e.hot.invalidate()}))}e.hot.dispose((function(){v()})),h.default&&h.default.locals&&h.default.locals},72:e=>{"use strict";var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],s=t.base?d[0]+t.base:d[0],l=i[s]||0,u="".concat(s," ").concat(l);i[s]=l+1;var p=r(u),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(f);else{var A=o(f,t);t.byIndex=c,n.splice(c,0,{identifier:u,updater:A,references:1})}a.push(u)}return a}function o(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,o){var i=t(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=r(i[a]);n[c].references--}for(var d=t(e,o),s=0;s<i.length;s++){var l=r(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=d}}},659:e=>{"use strict";var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,r)=>{"use strict";e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},789:(e,n,r)=>{"use strict";r(268),r(144)},144:()=>{const e=document.querySelector(".heading");console.log(e.innerHTML)}},t={};function o(e){var n=t[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var i=t[e]={id:e,exports:{}};try{var a={id:e,module:i,factory:r[e],require:o};o.i.forEach((function(e){e(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(e){throw i.error=e,e}return i.exports}o.m=r,o.c=t,o.i=[],o.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n},o.d=(e,n)=>{for(var r in n)o.o(n,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o.hu=e=>e+"."+o.h()+".hot-update.js",o.miniCssF=e=>{},o.hmrF=()=>"main."+o.h()+".hot-update.json",o.h=()=>"dc6449c840710eea3830",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),e={},n="block-2-html-css:",o.l=(r,t,i,a)=>{if(e[r])e[r].push(t);else{var c,d;if(void 0!==i)for(var s=document.getElementsByTagName("script"),l=0;l<s.length;l++){var u=s[l];if(u.getAttribute("src")==r||u.getAttribute("data-webpack")==n+i){c=u;break}}c||(d=!0,(c=document.createElement("script")).charset="utf-8",c.timeout=120,o.nc&&c.setAttribute("nonce",o.nc),c.setAttribute("data-webpack",n+i),c.src=r),e[r]=[t];var p=(n,t)=>{c.onerror=c.onload=null,clearTimeout(f);var o=e[r];if(delete e[r],c.parentNode&&c.parentNode.removeChild(c),o&&o.forEach((e=>e(t))),n)return n(t)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:c}),12e4);c.onerror=p.bind(null,c.onerror),c.onload=p.bind(null,c.onload),d&&document.head.appendChild(c)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,n,r,t={},i=o.c,a=[],c=[],d="idle",s=0,l=[];function u(e){d=e;for(var n=[],r=0;r<c.length;r++)n[r]=c[r].call(null,e);return Promise.all(n).then((function(){}))}function p(){0==--s&&u("ready").then((function(){if(0===s){var e=l;l=[];for(var n=0;n<e.length;n++)e[n]()}}))}function f(e){if("idle"!==d)throw new Error("check() is only allowed in idle status");return u("check").then(o.hmrM).then((function(r){return r?u("prepare").then((function(){var t=[];return n=[],Promise.all(Object.keys(o.hmrC).reduce((function(e,i){return o.hmrC[i](r.c,r.r,r.m,e,n,t),e}),[])).then((function(){return n=function(){return e?h(e):u("ready").then((function(){return t}))},0===s?n():new Promise((function(e){l.push((function(){e(n())}))}));var n}))})):u(m()?"ready":"idle").then((function(){return null}))}))}function A(e){return"ready"!==d?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+d+")")})):h(e)}function h(e){e=e||{},m();var t=n.map((function(n){return n(e)}));n=void 0;var o=t.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return u("abort").then((function(){throw o[0]}));var i=u("dispose");t.forEach((function(e){e.dispose&&e.dispose()}));var a,c=u("apply"),d=function(e){a||(a=e)},s=[];return t.forEach((function(e){if(e.apply){var n=e.apply(d);if(n)for(var r=0;r<n.length;r++)s.push(n[r])}})),Promise.all([i,c]).then((function(){return a?u("fail").then((function(){throw a})):r?h(e).then((function(e){return s.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):u("idle").then((function(){return s}))}))}function m(){if(r)return n||(n=[]),Object.keys(o.hmrI).forEach((function(e){r.forEach((function(r){o.hmrI[e](r,n)}))})),r=void 0,!0}o.hmrD=t,o.i.push((function(l){var h,m,v,g,b=l.module,C=function(n,r){var t=i[r];if(!t)return n;var o=function(o){if(t.hot.active){if(i[o]){var c=i[o].parents;-1===c.indexOf(r)&&c.push(r)}else a=[r],e=o;-1===t.children.indexOf(o)&&t.children.push(o)}else console.warn("[HMR] unexpected require("+o+") from disposed module "+r),a=[];return n(o)},c=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(r){n[e]=r}}};for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&"e"!==l&&Object.defineProperty(o,l,c(l));return o.e=function(e,r){return function(e){switch(d){case"ready":u("prepare");case"prepare":return s++,e.then(p,p),e;default:return e}}(n.e(e,r))},o}(l.require,l.id);b.hot=(h=l.id,m=b,g={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:v=e!==h,_requireSelf:function(){a=m.parents.slice(),e=v?void 0:h,o(h)},active:!0,accept:function(e,n,r){if(void 0===e)g._selfAccepted=!0;else if("function"==typeof e)g._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)g._acceptedDependencies[e[t]]=n||function(){},g._acceptedErrorHandlers[e[t]]=r;else g._acceptedDependencies[e]=n||function(){},g._acceptedErrorHandlers[e]=r},decline:function(e){if(void 0===e)g._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)g._declinedDependencies[e[n]]=!0;else g._declinedDependencies[e]=!0},dispose:function(e){g._disposeHandlers.push(e)},addDisposeHandler:function(e){g._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=g._disposeHandlers.indexOf(e);n>=0&&g._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,d){case"idle":n=[],Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](h,n)})),u("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](h,n)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(h)}},check:f,apply:A,status:function(e){if(!e)return d;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var n=c.indexOf(e);n>=0&&c.splice(n,1)},data:t[h]},e=void 0,g),b.parents=a,b.children=[],a=[],l.require=C})),o.hmrC={},o.hmrI={}})(),(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var n=o.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var t=r.length-1;t>-1&&(!e||!/^http(s?):/.test(e));)e=r[t--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{if("undefined"!=typeof document){var e=[],n=[],r=r=>({dispose:()=>{for(var n=0;n<e.length;n++){var r=e[n];r.parentNode&&r.parentNode.removeChild(r)}e.length=0},apply:()=>{for(var e=0;e<n.length;e++)n[e].rel="stylesheet";n.length=0}});o.hmrC.miniCss=(t,i,a,c,d,s)=>{d.push(r),t.forEach((r=>{var t=o.miniCssF(r),i=o.p+t,a=((e,n)=>{for(var r=document.getElementsByTagName("link"),t=0;t<r.length;t++){var o=(a=r[t]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(o===e||o===n))return a}var i=document.getElementsByTagName("style");for(t=0;t<i.length;t++){var a;if((o=(a=i[t]).getAttribute("data-href"))===e||o===n)return a}})(t,i);a&&c.push(new Promise(((t,c)=>{var d=((e,n,r,t,i)=>{var a=document.createElement("link");return a.rel="stylesheet",a.type="text/css",o.nc&&(a.nonce=o.nc),a.onerror=a.onload=r=>{if(a.onerror=a.onload=null,"load"===r.type)t();else{var o=r&&r.type,c=r&&r.target&&r.target.href||n,d=new Error("Loading CSS chunk "+e+" failed.\n("+o+": "+c+")");d.name="ChunkLoadError",d.code="CSS_CHUNK_LOAD_FAILED",d.type=o,d.request=c,a.parentNode&&a.parentNode.removeChild(a),i(d)}},a.href=n,r?r.parentNode.insertBefore(a,r.nextSibling):document.head.appendChild(a),a})(r,i,a,(()=>{d.as="style",d.rel="preload",t()}),c);e.push(a),n.push(d)})))}))}}})(),(()=>{var e,n,r,t,i,a=o.hmrS_jsonp=o.hmrS_jsonp||{792:0},c={};function d(n,r){return e=r,new Promise(((e,r)=>{c[n]=e;var t=o.p+o.hu(n),i=new Error;o.l(t,(e=>{if(c[n]){c[n]=void 0;var t=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;i.message="Loading hot update chunk "+n+" failed.\n("+t+": "+o+")",i.name="ChunkLoadError",i.type=t,i.request=o,r(i)}}))}))}function s(e){function c(e){for(var n=[e],r={},t=n.map((function(e){return{chain:[e],id:e}}));t.length>0;){var i=t.pop(),a=i.id,c=i.chain,s=o.c[a];if(s&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:c,moduleId:a};if(s.hot._main)return{type:"unaccepted",chain:c,moduleId:a};for(var l=0;l<s.parents.length;l++){var u=s.parents[l],p=o.c[u];if(p){if(p.hot._declinedDependencies[a])return{type:"declined",chain:c.concat([u]),moduleId:a,parentId:u};-1===n.indexOf(u)&&(p.hot._acceptedDependencies[a]?(r[u]||(r[u]=[]),d(r[u],[a])):(delete r[u],n.push(u),t.push({chain:c.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:r}}function d(e,n){for(var r=0;r<n.length;r++){var t=n[r];-1===e.indexOf(t)&&e.push(t)}}o.f&&delete o.f.jsonpHmr,n=void 0;var s={},l=[],u={},p=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in r)if(o.o(r,f)){var A=r[f],h=A?c(f):{type:"disposed",moduleId:f},m=!1,v=!1,g=!1,b="";switch(h.chain&&(b="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(m=new Error("Aborted because of self decline: "+h.moduleId+b));break;case"declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(m=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+b));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(h),e.ignoreUnaccepted||(m=new Error("Aborted because "+f+" is not accepted"+b));break;case"accepted":e.onAccepted&&e.onAccepted(h),v=!0;break;case"disposed":e.onDisposed&&e.onDisposed(h),g=!0;break;default:throw new Error("Unexception type "+h.type)}if(m)return{error:m};if(v)for(f in u[f]=A,d(l,h.outdatedModules),h.outdatedDependencies)o.o(h.outdatedDependencies,f)&&(s[f]||(s[f]=[]),d(s[f],h.outdatedDependencies[f]));g&&(d(l,[h.moduleId]),u[f]=p)}r=void 0;for(var C,y=[],x=0;x<l.length;x++){var w=l[x],E=o.c[w];E&&(E.hot._selfAccepted||E.hot._main)&&u[w]!==p&&!E.hot._selfInvalidated&&y.push({module:w,require:E.hot._requireSelf,errorHandler:E.hot._selfAccepted})}return{dispose:function(){var e;t.forEach((function(e){delete a[e]})),t=void 0;for(var n,r=l.slice();r.length>0;){var i=r.pop(),c=o.c[i];if(c){var d={},u=c.hot._disposeHandlers;for(x=0;x<u.length;x++)u[x].call(null,d);for(o.hmrD[i]=d,c.hot.active=!1,delete o.c[i],delete s[i],x=0;x<c.children.length;x++){var p=o.c[c.children[x]];p&&(e=p.parents.indexOf(i))>=0&&p.parents.splice(e,1)}}}for(var f in s)if(o.o(s,f)&&(c=o.c[f]))for(C=s[f],x=0;x<C.length;x++)n=C[x],(e=c.children.indexOf(n))>=0&&c.children.splice(e,1)},apply:function(n){for(var r in u)o.o(u,r)&&(o.m[r]=u[r]);for(var t=0;t<i.length;t++)i[t](o);for(var a in s)if(o.o(s,a)){var c=o.c[a];if(c){C=s[a];for(var d=[],p=[],f=[],A=0;A<C.length;A++){var h=C[A],m=c.hot._acceptedDependencies[h],v=c.hot._acceptedErrorHandlers[h];if(m){if(-1!==d.indexOf(m))continue;d.push(m),p.push(v),f.push(h)}}for(var g=0;g<d.length;g++)try{d[g].call(null,C)}catch(r){if("function"==typeof p[g])try{p[g](r,{moduleId:a,dependencyId:f[g]})}catch(t){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:f[g],error:t,originalError:r}),e.ignoreErrored||(n(t),n(r))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:a,dependencyId:f[g],error:r}),e.ignoreErrored||n(r)}}}for(var b=0;b<y.length;b++){var x=y[b],w=x.module;try{x.require(w)}catch(r){if("function"==typeof x.errorHandler)try{x.errorHandler(r,{moduleId:w,module:o.c[w]})}catch(t){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:w,error:t,originalError:r}),e.ignoreErrored||(n(t),n(r))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:w,error:r}),e.ignoreErrored||n(r)}}return l}}}self.webpackHotUpdateblock_2_html_css=(n,t,a)=>{for(var d in t)o.o(t,d)&&(r[d]=t[d],e&&e.push(d));a&&i.push(a),c[n]&&(c[n](),c[n]=void 0)},o.hmrI.jsonp=function(e,n){r||(r={},i=[],t=[],n.push(s)),o.o(r,e)||(r[e]=o.m[e])},o.hmrC.jsonp=function(e,c,l,u,p,f){p.push(s),n={},t=c,r=l.reduce((function(e,n){return e[n]=!1,e}),{}),i=[],e.forEach((function(e){o.o(a,e)&&void 0!==a[e]?(u.push(d(e,f)),n[e]=!0):n[e]=!1})),o.f&&(o.f.jsonpHmr=function(e,r){n&&o.o(n,e)&&!n[e]&&(r.push(d(e)),n[e]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),o.nc=void 0,o(789)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,